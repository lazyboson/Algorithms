/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author lazyboson
 */
//Problem - https://open.kattis.com/problems/wheresmyinternet
#include <bits/stdc++.h>

using namespace std;
const int maxN = 2e5 + 5;

class WheresMyInternet {
public:
    void dfs(int v, array<int, maxN> &visited, map<int, set<int>> &adj) {
        if (visited[v] != -1)
            return;
        visited[v] = true;
        for (auto const &u: adj[v]) {
            dfs(u, visited, adj);
        }
    }

    void solve(std::istream &in, std::ostream &out) {
        int n, m;
        in >> n >> m;
        array<int, maxN> visited;
        visited.fill(-1);
        map<int, set<int>> adj;
        for (int i = 0; i < m; ++i) {
            int src, dest;
            in >> src >> dest;
            adj[src].insert(dest);
            adj[dest].insert(src);
        }
        dfs(1, visited, adj);
        int found = 0;
        for (int i = 1; i <= n; ++i) {
            if (visited[i] == -1) {
                found++;
                break;
            }
        }

        if (found > 0) {
            for (int i = 1; i <= n; ++i) {
                if (visited[i] == -1) {
                    out << i << "\n";
                }
            }
        } else {
            out << "Connected" << "\n";
        }
    }
};

int main() {
    WheresMyInternet solver;
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
